#pragma once

#include <PinNames.h>

#define HARDWARE_P1A
//#define HARDWARE_P1B

//#define SENSOR_MT6701
#define SENSOR_MT6835

#define DRIVER_MBED
//#define DRIVER_PORTENTA
//#define DRIVER_STM32

#define MOTORS 5

#define MOTOR_PP 5
#define VOLTAGE_POWER_SUPPLY 9
#define VOLTAGE_SENSOR_ALIGN 3
#define VELOCITY_INDEX_SEARCH 3

// Hardware P1A
#ifdef HARDWARE_P1A
#define PIN_U_M1    D10 // PK1_ALT1
#define PIN_V_M1    D1  // PA9_ALT1
#define PIN_W_M1    D57 // PJ9_ALT1

#define PIN_U_M2    D85 // PA5
#define PIN_V_M2    D66 // PA1
#define PIN_W_M2    D3  // PA2

#define PIN_U_M3    D7  // PB4
#define PIN_V_M3    D5  // PA7_ALT1
#define PIN_W_M3    A2  // PB0_ALT1

#define PIN_U_M4    D6  // PD13
#define PIN_V_M4    D8  // PB8
#define PIN_W_M4    D9  // PB9

#define PIN_U_M5    D4  // PJ8_ALT1
#define PIN_V_M5    D15 // PC7_ALT1
#define PIN_W_M5    D48 // PK0_ALT1

#define PIN_EN_M1   D2
#define PIN_EN_M2   D14
#define PIN_EN_M3   D0
#define PIN_EN_M4   D16
#define PIN_EN_M5   D17

#define PIN_MAG_CS1 D56
#define PIN_MAG_CS2 D58
#define PIN_MAG_CS3 D60
#define PIN_MAG_CS4 D62
#define PIN_MAG_CS5 D64

#define PIN_SENSE_M1 A5
#define PIN_SENSE_M2 A4
#define PIN_SENSE_M3 A3
#define PIN_SENSE_M4 A1
#define PIN_SENSE_M5 A0

#define PIN_FAULT_M1 D94
#define PIN_FAULT_M2 D93
#define PIN_FAULT_M3 D84
#define PIN_FAULT_M4 A7
#define PIN_FAULT_M5 A6
#endif

// Hardware P1B
#ifdef HARDWARE_P1B
#define PIN_U_M1    D10 // PK1_ALT1
#define PIN_V_M1    D1  // PA9_ALT1
#define PIN_W_M1    D57 // PJ9_ALT1

#define PIN_U_M2    D56 // PA6
#define PIN_V_M2    D3  // PA2
#define PIN_W_M2    D40 // PE6

#define PIN_U_M3    D7  // PB4
#define PIN_V_M3    D5  // PA7_ALT1
#define PIN_W_M3    A2  // PB0_ALT1

#define PIN_U_M4    D6  // PD13
#define PIN_V_M4    D8  // PB8
#define PIN_W_M4    D9  // PB9

#define PIN_U_M5    D4  // PJ8_ALT1
#define PIN_V_M5    D15 // PC7_ALT1
#define PIN_W_M5    D48 // PK0_ALT1

#define PIN_EN_M1   D2
#define PIN_EN_M2   D14
#define PIN_EN_M3   D0
#define PIN_EN_M4   D16
#define PIN_EN_M5   D17

#define PIN_MAG_CS1 D56
#define PIN_MAG_CS2 D58
#define PIN_MAG_CS3 D60
#define PIN_MAG_CS4 D62
#define PIN_MAG_CS5 D64

#define PIN_SENSE_M1 A5
#define PIN_SENSE_M2 A4
#define PIN_SENSE_M3 A3
#define PIN_SENSE_M4 A1
#define PIN_SENSE_M5 A0

#define PIN_FAULT_M1 D94
#define PIN_FAULT_M2 D93
#define PIN_FAULT_M3 D84
#define PIN_FAULT_M4 A7
#define PIN_FAULT_M5 A6
#endif

// SPI1
#define PIN_SPI_MOSI D11
#define PIN_SPI_MISO D12
#define PIN_SPI_SCK  D13

#define PIN_LED D88

const PinMap PinMap_TIM[] = {
  { PK_1,  TIM1_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF1_TIM1, 1, 0)}, // TIM1_CH1
  { PA_9,  TIM1_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF1_TIM1, 2, 0)}, // TIM1_CH2
  { PJ_9,  TIM1_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF1_TIM1, 3, 0)}, // TIM1_CH3

  { PA_5,  TIM2_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF1_TIM2, 1, 0)}, // TIM2_CH1
  { PA_1,  TIM2_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF1_TIM2, 2, 0)}, // TIM2_CH2
  { PA_2,  TIM2_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF1_TIM2, 3, 0)}, // TIM2_CH3

  { PB_4,  TIM3_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF2_TIM3, 1, 0)}, // TIM3_CH1
  { PA_7,  TIM3_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF2_TIM3, 2, 0)}, // TIM3_CH2
  { PB_0,  TIM3_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF2_TIM3, 3, 0)}, // TIM3_CH3

  { PD_13, TIM4_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF2_TIM4, 2, 0)}, // TIM4_CH2
  { PB_8,  TIM4_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF2_TIM4, 3, 0)}, // TIM4_CH3
  { PB_9,  TIM4_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF2_TIM4, 4, 0)}, // TIM4_CH4

  { PJ_8,  TIM8_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF3_TIM8, 1, 0)}, // TIM8_CH1
  { PC_7,  TIM8_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF3_TIM8, 2, 0)}, // TIM8_CH2
  { PK_0,  TIM8_BASE,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_PULLUP, GPIO_AF3_TIM8, 3, 0)}, // TIM8_CH3
  { NC, NC, 0}
};


// https://github.com/arduino/mbed-os/blob/extrapatches-6.17.0/targets/TARGET_STM/TARGET_STM32H7/TARGET_STM32H747xI/TARGET_GIGA/PeripheralPins.c
// TIM5 cannot be used because already used by the us_ticker
// TIM2 cannot be used because already used by the us_ticker (DUAL_CORE)
const PinMap PinMap_PWM[] = {
  { PK_1,       PWM_1,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM1,  1, 0)}, // TIM1_CH1 - 1.1
  { PA_9,       PWM_1,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM1,  2, 0)}, // TIM1_CH2 - 1.2
  { PJ_9,       PWM_1,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM1,  3, 0)}, // TIM1_CH3 - 1.3

  { PA_6_ALT0,  PWM_13, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF9_TIM13, 1, 0)}, // TIM13_CH1 - 2.1
  { PA_2,       PWM_15, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF4_TIM15, 1, 0)}, // TIM15_CH1 - 2.2
  { PE_6,       PWM_15, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF4_TIM15, 2, 0)}, // TIM15_CH2 - 2.3

  { PB_4,       PWM_3,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM3,  1, 0)}, // TIM3_CH1 - 3.1
  { PA_7_ALT0,  PWM_3,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM3,  2, 0)}, // TIM3_CH2 - 3.2
  { PB_0_ALT0,  PWM_3,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM3,  3, 0)}, // TIM3_CH3 - 3.3

  { PD_13,      PWM_4,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM4,  2, 0)}, // TIM4_CH2 - 4.1
  { PB_8,       PWM_4,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM4,  3, 0)}, // TIM4_CH3 - 4.2
  { PB_9,       PWM_4,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM4,  4, 0)}, // TIM4_CH4 - 4.3

  { PJ_8_ALT0,  PWM_8,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF3_TIM8,  1, 0)}, // TIM8_CH1 - 5.1
  { PC_7_ALT0,  PWM_8,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF3_TIM8,  2, 0)}, // TIM8_CH2 - 5.2
  { PK_0_ALT0,  PWM_8,  STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF3_TIM8,  3, 0)}, // TIM8_CH3 - 5.3

  { PB_14_ALT1, PWM_12, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM12, 1, 0)}, // TIM12_CH1
  { PB_15_ALT1, PWM_12, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM12, 2, 0)}, // TIM12_CH2
  { PF_8,       PWM_13, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF9_TIM13, 1, 0)}, // TIM13_CH1
  { PF_9,       PWM_14, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF9_TIM14, 1, 0)}, // TIM14_CH1
  { PH_6,       PWM_12, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM12, 1, 0)}, // TIM12_CH1 D13
  { PH_9,       PWM_12, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF2_TIM12, 2, 0)}, // TIM12_CH2 D65
  { PE_5,       PWM_15, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF4_TIM15, 1, 0)}, // TIM15_CH1 D51
  { PA_1,       PWM_15, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF4_TIM15, 1, 1)}, // TIM15_CH1N
  { PA_3,       PWM_15, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF4_TIM15, 2, 0)}, // TIM15_CH2 D2
  { PB_6_ALT0,  PWM_16, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM16, 1, 1)}, // TIM16_CH1N
  { PB_7_ALT0,  PWM_17, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM17, 1, 1)}, // TIM17_CH1N
  { PE_4,       PWM_15, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF4_TIM15, 1, 1)}, // TIM15_CH1N
  { PF_6,       PWM_16, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM16, 1, 0)}, // TIM16_CH1
  { PF_7,       PWM_17, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM17, 1, 0)}, // TIM17_CH1
  { PF_8_ALT0,  PWM_16, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM16, 1, 1)}, // TIM16_CH1N
  { PF_9_ALT0,  PWM_17, STM_PIN_DATA_EXT(STM_MODE_AF_PP, GPIO_NOPULL, GPIO_AF1_TIM17, 1, 1)}, // TIM17_CH1N
  { NC, NC, 0}
};